name: build

on:
  push:

env:
  HOME: "${{github.workspace}}\\home"

jobs:
  build:
    # Only set the topic `has-issrc-build-env` if the secrets are available
    if: contains(github.event.repository.topics, 'has-issrc-build-env')
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: initialize build environment
        env:
          ISSRC_BUILD_ENV_ZIP_PASSWORD: ${{ secrets.ISSRC_BUILD_ENV_ZIP_PASSWORD }}
          ISSRC_BUILD_ENV_ZIP_URL: ${{ secrets.ISSRC_BUILD_ENV_ZIP_URL }}
        run: |
          (New-Object Net.WebClient).DownloadFile($env:ISSRC_BUILD_ENV_ZIP_URL, "issrc-build-env.zip")
          & "C:\\Program Files\\7-Zip\\7z.exe" x -oissrc-build-env -p"$env:ISSRC_BUILD_ENV_ZIP_PASSWORD" issrc-build-env.zip
          if (!(Test-Path issrc-build-env\bin\dcc32.exe)) {
            Write-Host "Failed to extract dcc32.exe"
            Exit 1
          }
          Remove-Item issrc-build-env.zip
          $DELPHIXEROOT = (Get-Item .\issrc-build-env).FullName
          "DELPHIXEROOT=$DELPHIXEROOT" |  Out-File -NoNewLine -Encoding ascii -Append "$env:GITHUB_ENV"
      - name: Prepare home directory for code-signing
        env:
          CODESIGN_P12: ${{secrets.CODESIGN_P12}}
          CODESIGN_PASS: ${{secrets.CODESIGN_PASS}}
        if: env.CODESIGN_P12 != '' && env.CODESIGN_PASS != ''
        shell: bash
        run: |
          mkdir -p home/bin &&
          echo -n "$CODESIGN_P12" | tr % '\n' | base64 -d >home/.codesign.p12 &&
          printf '%s ' >home/bin/run-signtool.bat \
            '"C:\Program Files (x86)\Windows Kits\10\App Certification Kit\signtool.exe" sign' \
            '/v /fd SHA256 /du "https://jrsoftware.org" /d "Inno Setup"' \
            '/tr http://timestamp.comodoca.com?td=sha256 /td SHA256' \
            '/f "${{github.workspace}}\home\.codesign.p12"' \
            "/p \"$CODESIGN_PASS\" \"%1\"" &&
          printf '%s\n' >setup-sign.bat \
            'mkdir tmp-unsigned' \
            'copy files tmp-unsigned' \
            'tmp-unsigned\iscc /Sissigntool256="${{github.workspace}}\home\bin\run-signtool.bat $f" /DSIGNTOOL /DNOSHA1SIGNTOOL setup.iss'
      - name: build issrc
        run: |
          "set DELPHIXEROOT=$env:DELPHIXEROOT" | Out-File -NoNewline -Encoding ascii compilesettings.bat
          "set DELPHIXEROOT=$env:DELPHIXEROOT" | Out-File -NoNewline -Encoding ascii ISHelp\ISHelpGen\compilesettings.bat
          "set HHCEXE=%ProgramFiles(x86)%\HTML Help Workshop\hhc.exe" | Out-File -NoNewline -Encoding ascii ISHelp\compilesettings.bat
          "set HHCEXE=%ProgramFiles(x86)%\HTML Help Workshop\hhc.exe" | Out-File -NoNewline -Encoding ascii Projects\ISPP\Help\compilesettings.bat
          .\build.bat
      - name: Clean up temporary files
        if: always()
        shell: bash
        run: rm -rf home setup-sign.bat
      - name: copy license.txt into all artifacts
        run: |
          copy license.txt Files
          copy license.txt Output
          copy license.txt Projects/ISPP/Help/Staging
          copy license.txt ISHelp/Staging
      - name: upload Files
        uses: actions/upload-artifact@v2
        with:
          name: Files
          path: Files
      - name: upload installer
        uses: actions/upload-artifact@v2
        with:
          name: Output
          path: Output
      - name: upload ISPP/Help
        uses: actions/upload-artifact@v2
        with:
          name: Help
          path: Projects/ISPP/Help/Staging
      - name: upload ISHelp
        uses: actions/upload-artifact@v2
        with:
          name: ISHelp
          path: ISHelp/Staging
